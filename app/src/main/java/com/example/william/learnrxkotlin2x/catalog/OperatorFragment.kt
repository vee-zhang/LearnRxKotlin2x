package com.example.william.learnrxkotlin2x.catalogimport android.app.Fragmentimport android.app.FragmentTransactionimport android.os.Bundleimport android.support.v7.widget.LinearLayoutManagerimport android.view.LayoutInflaterimport android.view.Viewimport android.view.ViewGroupimport com.example.william.learnrxkotlin2x.pojo.DataPojoimport com.example.william.learnrxkotlin2x.widget.OperatorAdapterimport com.example.william.learnrxkotlin2x.pojo.OperatorTypeimport com.example.william.learnrxkotlin2x.Rimport com.example.william.learnrxkotlin2x.operator.OperatorWelcomeFragmentimport com.example.william.learnrxkotlin2x.pojo.Operatorimport com.google.gson.Gsonimport kotlinx.android.synthetic.main.fragment_operator.view.*import java.io.InputStreamReaderclass OperatorFragment : Fragment(), OperatorAdapter.OnItemClickListener {    private lateinit var list: List<OperatorType>    private lateinit var ft: FragmentTransaction    private lateinit var rootView: View    override fun onCreateView(inflater: LayoutInflater, container: ViewGroup,                              savedInstanceState: Bundle?): View {        rootView = inflater.inflate(R.layout.fragment_operator, container, false)//        replacePage(OperatorWelcomeFragment::class.java.name)        val fragment = OperatorWelcomeFragment()        replaceFragment(fragment)        rootView.rv.layoutManager = LinearLayoutManager(activity)        val inputStream = activity.assets.open("rxjava操作符目录.json")        val isr = InputStreamReader(inputStream)        val gson = Gson()        list = gson.fromJson<DataPojo>(isr, DataPojo::class.java).list        val operatorAdapter = OperatorAdapter(list, this)        rootView.rv.adapter = operatorAdapter        return rootView    }    override fun onItemClick(operator: Operator) {        replacePage(operator)    }    private fun replacePage(operator: Operator) {        val fragment = Class.forName(operator.fragmentName).newInstance() as Fragment        val bundle = Bundle()        bundle.putParcelableArrayList("funcList", operator.funcList)        fragment.arguments = bundle        replaceFragment(fragment)    }    private fun replaceFragment(fragment: Fragment) {        ft = fragmentManager.beginTransaction()        ft.replace(R.id.container_operator, fragment)        ft.commit()    }}